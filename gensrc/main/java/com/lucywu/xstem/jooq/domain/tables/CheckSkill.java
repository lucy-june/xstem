/**
 * This class is generated by jOOQ
 */
package com.lucywu.xstem.jooq.domain.tables;


import com.lucywu.xstem.jooq.domain.Keys;
import com.lucywu.xstem.jooq.domain.Ss1604c195Rd2;
import com.lucywu.xstem.jooq.domain.tables.records.CheckSkillRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CheckSkill extends TableImpl<CheckSkillRecord> {

	private static final long serialVersionUID = 1222852745;

	/**
	 * The reference instance of <code>ss1604c195_rd2.check_skill</code>
	 */
	public static final CheckSkill CHECK_SKILL = new CheckSkill();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CheckSkillRecord> getRecordType() {
		return CheckSkillRecord.class;
	}

	/**
	 * The column <code>ss1604c195_rd2.check_skill.steid</code>.
	 */
	public final TableField<CheckSkillRecord, Integer> STEID = createField("steid", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ss1604c195_rd2.check_skill.description</code>.
	 */
	public final TableField<CheckSkillRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>ss1604c195_rd2.check_skill.state</code>. 1-wait check
2-checked
	 */
	public final TableField<CheckSkillRecord, Integer> STATE = createField("state", org.jooq.impl.SQLDataType.INTEGER, this, "1-wait check\r\n2-checked");

	/**
	 * The column <code>ss1604c195_rd2.check_skill.updatedby</code>.
	 */
	public final TableField<CheckSkillRecord, Integer> UPDATEDBY = createField("updatedby", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ss1604c195_rd2.check_skill.createdat</code>.
	 */
	public final TableField<CheckSkillRecord, Timestamp> CREATEDAT = createField("createdat", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>ss1604c195_rd2.check_skill.updatedat</code>.
	 */
	public final TableField<CheckSkillRecord, Timestamp> UPDATEDAT = createField("updatedat", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>ss1604c195_rd2.check_skill.skillid</code>.
	 */
	public final TableField<CheckSkillRecord, Integer> SKILLID = createField("skillid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>ss1604c195_rd2.check_skill.skill</code>.
	 */
	public final TableField<CheckSkillRecord, String> SKILL = createField("skill", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>ss1604c195_rd2.check_skill.score</code>.
	 */
	public final TableField<CheckSkillRecord, Integer> SCORE = createField("score", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>ss1604c195_rd2.check_skill</code> table reference
	 */
	public CheckSkill() {
		this("check_skill", null);
	}

	/**
	 * Create an aliased <code>ss1604c195_rd2.check_skill</code> table reference
	 */
	public CheckSkill(String alias) {
		this(alias, CHECK_SKILL);
	}

	private CheckSkill(String alias, Table<CheckSkillRecord> aliased) {
		this(alias, aliased, null);
	}

	private CheckSkill(String alias, Table<CheckSkillRecord> aliased, Field<?>[] parameters) {
		super(alias, Ss1604c195Rd2.SS1604C195_RD2, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CheckSkillRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CHECK_SKILL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CheckSkillRecord> getPrimaryKey() {
		return Keys.CHECK_SKILL_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CheckSkillRecord>> getKeys() {
		return Arrays.<UniqueKey<CheckSkillRecord>>asList(Keys.CHECK_SKILL_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CheckSkill as(String alias) {
		return new CheckSkill(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CheckSkill rename(String name) {
		return new CheckSkill(name, null);
	}
}
