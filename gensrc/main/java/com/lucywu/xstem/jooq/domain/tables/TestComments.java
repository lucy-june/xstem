/**
 * This class is generated by jOOQ
 */
package com.lucywu.xstem.jooq.domain.tables;


import com.lucywu.xstem.jooq.domain.Keys;
import com.lucywu.xstem.jooq.domain.Ss1604c195Rd2;
import com.lucywu.xstem.jooq.domain.tables.records.TestCommentsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestComments extends TableImpl<TestCommentsRecord> {

	private static final long serialVersionUID = 2110430824;

	/**
	 * The reference instance of <code>ss1604c195_rd2.test_comments</code>
	 */
	public static final TestComments TEST_COMMENTS = new TestComments();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TestCommentsRecord> getRecordType() {
		return TestCommentsRecord.class;
	}

	/**
	 * The column <code>ss1604c195_rd2.test_comments.ID</code>.
	 */
	public final TableField<TestCommentsRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>ss1604c195_rd2.test_comments.POST_ID</code>.
	 */
	public final TableField<TestCommentsRecord, Integer> POST_ID = createField("POST_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>ss1604c195_rd2.test_comments.NAME</code>.
	 */
	public final TableField<TestCommentsRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>ss1604c195_rd2.test_comments.EMAIL</code>.
	 */
	public final TableField<TestCommentsRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>ss1604c195_rd2.test_comments.CONTENT</code>.
	 */
	public final TableField<TestCommentsRecord, String> CONTENT = createField("CONTENT", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>ss1604c195_rd2.test_comments.CREATED_ON</code>.
	 */
	public final TableField<TestCommentsRecord, Timestamp> CREATED_ON = createField("CREATED_ON", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>ss1604c195_rd2.test_comments</code> table reference
	 */
	public TestComments() {
		this("test_comments", null);
	}

	/**
	 * Create an aliased <code>ss1604c195_rd2.test_comments</code> table reference
	 */
	public TestComments(String alias) {
		this(alias, TEST_COMMENTS);
	}

	private TestComments(String alias, Table<TestCommentsRecord> aliased) {
		this(alias, aliased, null);
	}

	private TestComments(String alias, Table<TestCommentsRecord> aliased, Field<?>[] parameters) {
		super(alias, Ss1604c195Rd2.SS1604C195_RD2, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TestCommentsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TEST_COMMENTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TestCommentsRecord> getPrimaryKey() {
		return Keys.TEST_COMMENTS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TestCommentsRecord>> getKeys() {
		return Arrays.<UniqueKey<TestCommentsRecord>>asList(Keys.TEST_COMMENTS_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<TestCommentsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<TestCommentsRecord, ?>>asList(Keys.TEST_COMMENTS__TEST_COMMENTS_POST_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestComments as(String alias) {
		return new TestComments(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TestComments rename(String name) {
		return new TestComments(name, null);
	}
}
