/**
 * This class is generated by jOOQ
 */
package com.lucywu.xstem.jooq.domain.tables.records;


import com.lucywu.xstem.jooq.domain.tables.InfoDepartment;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InfoDepartmentRecord extends UpdatableRecordImpl<InfoDepartmentRecord> implements Record3<Integer, String, Integer> {

	private static final long serialVersionUID = -1055375312;

	/**
	 * Setter for <code>ss1604c195_rd2.info_department.departmentid</code>.
	 */
	public void setDepartmentid(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>ss1604c195_rd2.info_department.departmentid</code>.
	 */
	public Integer getDepartmentid() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>ss1604c195_rd2.info_department.departmentname</code>.
	 */
	public void setDepartmentname(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>ss1604c195_rd2.info_department.departmentname</code>.
	 */
	public String getDepartmentname() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>ss1604c195_rd2.info_department.parent_departmentid</code>.
	 */
	public void setParentDepartmentid(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>ss1604c195_rd2.info_department.parent_departmentid</code>.
	 */
	public Integer getParentDepartmentid() {
		return (Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, Integer> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, Integer> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return InfoDepartment.INFO_DEPARTMENT.DEPARTMENTID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return InfoDepartment.INFO_DEPARTMENT.DEPARTMENTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return InfoDepartment.INFO_DEPARTMENT.PARENT_DEPARTMENTID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getDepartmentid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getDepartmentname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getParentDepartmentid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InfoDepartmentRecord value1(Integer value) {
		setDepartmentid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InfoDepartmentRecord value2(String value) {
		setDepartmentname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InfoDepartmentRecord value3(Integer value) {
		setParentDepartmentid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InfoDepartmentRecord values(Integer value1, String value2, Integer value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached InfoDepartmentRecord
	 */
	public InfoDepartmentRecord() {
		super(InfoDepartment.INFO_DEPARTMENT);
	}

	/**
	 * Create a detached, initialised InfoDepartmentRecord
	 */
	public InfoDepartmentRecord(Integer departmentid, String departmentname, Integer parentDepartmentid) {
		super(InfoDepartment.INFO_DEPARTMENT);

		setValue(0, departmentid);
		setValue(1, departmentname);
		setValue(2, parentDepartmentid);
	}
}
